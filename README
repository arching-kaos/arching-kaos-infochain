Arching Kaos Infochain
======================

A way of spliting messages and restruct them from an unordered list.

See following notes on how this is achieved.

1. Pack a ZBLOCK
----------------
See pack_z_block.sh script


2. Split ZBLOCK's IPFS hash
---------------------------
You can directly go to edcode.py

We have the following IPFS hash

QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH

.QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH.  prepend and append dots


.QmbFMke1KXqnYyB
BWxB74N4c5SBnJMV
AiMNRcGu6x1AwQH.  split it


BWxB74N4c5SBnJMV.QmbFMke1KXqnYyB
.QmbFMke1KXqnYyBBWxB74N4c5SBnJMV
BWxB74N4c5SBnJMVAiMNRcGu6x1AwQH.
.QmbFMke1KXqnYyBAiMNRcGu6x1AwQH. mix it

send tx 1 2 3 4

Sender is NOT the owner of the data, is the distributor. Artists should be able to distribute their work.

receive txs in general

BWxB74N4c5SBnJMV .QmbFMke1KXqnYyB
.QmbFMke1KXqnYyB BWxB74N4c5SBnJMV
BWxB74N4c5SBnJMV AiMNRcGu6x1AwQH.
.QmbFMke1KXqnYyB AiMNRcGu6x1AwQH. split it

Find zeros in start and end

If starts and ends with zero it's an 1-3 combination
Starts but not ends with zero it's 1-2
If it doesn't start with zero but ends with it it's 2-3
else is 2-1

3. Download and extract the ZBLOCK
----------------------------------

See dlx.py


4. Verify that all the data is signed with the packed key
---------------------------------------------------------

TODO

5. Do extra checks
------------------

Example check at flac_check.py

6. Create a procedure that bonds everything in a super app
----------------------------------------------------------

TODO
