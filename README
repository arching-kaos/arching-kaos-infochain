Arching Kaos Infochain
======================

A way of spliting messages and restruct them from an unordered list.

See following notes on how this is achieved.

1. Pack a ZBLOCK
----------------
See pack_z_block.sh script


2. Split ZBLOCK's IPFS CID
--------------------------
You can directly go to edcode.py using the function encode(IPFS CID)

We have the following IPFS hash

QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH

...QmbFMke1KXq..nYyBBWxB74N4c5SBnJMVAiMN..RcGu6x1AwQH...  mix with dots

...QmbFMke1KXq
..nYyBBWxB74N4
c5SBnJMVAiMN..
RcGu6x1AwQH... split it

...QmbFMke1KXq..nYyBBWxB74N4
...QmbFMke1KXqc5SBnJMVAiMN..
...QmbFMke1KXqRcGu6x1AwQH...
..nYyBBWxB74N4c5SBnJMVAiMN..
..nYyBBWxB74N4RcGu6x1AwQH...  mix it

send tx 1 2 3 4 5

Sender is NOT the owner of the data, is the contributor/distributor. Artists should be able to distribute their work.

To get the info back you need to decode the list of transactions on ARCHINGKAOS asset

To be more specific, see the edcode.decode(TRANSACTIONS) function from edcode.py file

3. Download and extract the ZBLOCK
----------------------------------

See dlx.py


4. Verify that all the data is signed with the packed key
---------------------------------------------------------

TODO

5. Do extra checks
------------------

Example check at flac_check.py and ogg_check.py

6. Create a procedure that bonds everything in a super app
----------------------------------------------------------

TODO
